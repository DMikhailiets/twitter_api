{"version":3,"sources":["pages/rootComponent/component/rootComponent.module.css","components/notification/notification.js","components/items/items.js","utils/errorHandler.js","API/myAPI.js","redux/reducers/simpleReducer.js","redux/store.js","pages/rootComponent/component/rootComponent.jsx","redux/selectors/simpleSelector.js","pages/rootComponent/container/rootComponentContainer.jsx","App.js","index.js","components/items/items.module.css"],"names":["module","exports","Notification","text","type","title","duration","notification","message","description","Items","items","className","style","wrapper","tweetsWrapper","map","item","key","id","tweet","author","avatar","src","alt","content","datetime","moment","format","fromNow","marginTop","errorHandler","err","response","data","error","console","log","myApi","getData","a","axios","get","initialState","setData","simpleReducer","state","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","Search","Input","RootComponent","styles","placeholder","onSearch","enterButton","maxWidth","fetchData","createSelector","connect","dispatch","useEffect","App","React","useState","isDarkMode","setIsDarkMode","useThemeSwitcher","switcher","status","currentTheme","themes","checked","onChange","isChecked","theme","dark","light","marginLeft","exact","path","render","process","ReactDOM","StrictMode","themeMap","defaultTheme","insertionPoint","document","getElementById"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,+BAA+B,cAAgB,qCAAqC,QAAU,iC,kPCQ3GC,EAPM,SAAC,GAAD,QAAGC,YAAH,MAAU,GAAV,MAAcC,YAAd,MAAqB,OAArB,MAA6BC,aAA7B,MAAqC,GAArC,MAAyCC,gBAAzC,MAAoD,EAApD,SACjBC,IAAaH,GAAM,CACfI,QAASH,EACTI,YAAaN,EACbG,SAAUA,K,qEC4BHI,EA5BD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACZ,OACA,yBAAKC,UAAWC,IAAMC,SAChBH,EAEE,yBAAKC,UAAWC,IAAME,eAAiBJ,EAAMK,KAAI,SAACC,GAAD,OAAW,kBAAC,IAAD,CACxDC,IAAKD,EAAKE,GACVP,UAAWC,IAAMO,MACjBC,OAAQ,2BAAIJ,EAAKZ,OACjBiB,OACI,kBAAC,IAAD,CACAC,IAAI,mEACJC,IAAKP,EAAKZ,QAGdoB,QACI,2BAAIR,EAAKZ,OAEbqB,SACI,kBAAC,IAAD,CAASrB,MAAOsB,MAASC,OAAO,wBAChC,8BAAOD,MAASE,kBAhBxB,kBAAC,IAAD,CAAOpB,YAAY,GAAGI,MAAO,CAACiB,UAAW,YCgBtCC,EAxBM,SAACC,GAqBlB,OApBGA,EAAIC,SACP/B,EAAa,CACTC,KAAM6B,EAAIC,SAASC,KAAKC,MACxB/B,KAAM,QACNC,MAAO,yDAEA2B,GACPI,QAAQC,IAAIL,GACZ9B,EAAa,CACTC,KAAM,mBACNC,KAAM,QACNC,MAAO,mBAGXH,EAAa,CACTC,KAAM,uBACNC,KAAM,QACNC,MAAO,YAGR,MCVIiC,EAVD,CACVC,QAAQ,WAAD,4BAAE,sBAAAC,EAAA,+EAEYC,IAAMC,IAAI,wDAFtB,wEAIHX,EAAa,EAAD,IAJT,wDAAF,kDAAC,ICHNY,EAAe,CACjBT,KAAM,MAeJU,EAAU,SAACV,GAAD,MAAW,CAAC9B,KAAM,WAAY8B,SAW/BW,EAvBY,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCACzD,OAAOA,EAAO3C,MACV,IAAK,WACD,OAAO,eACA0C,EADP,CACcZ,KAAMa,EAAOb,OAG/B,QACI,OAAOY,I,kBCPfE,EAAcC,0BAAgB,CAChCJ,kBAOaK,EAJDC,sBAAYH,EAAaI,8BACnCC,0BAAgBC,O,gGCNZC,EAAWC,IAAXD,OAeOE,EAbO,SAAC,GAAoB,IAAnBvB,EAAkB,EAAlBA,KAAMK,EAAY,EAAZA,QAC1B,OACI,kBAAC,IAAD,CAAK3B,UAAW8C,IAAO5C,SACnB,4FACA,6GACA,6BACA,6BACA,kBAACyC,EAAD,CAAQI,YAAY,oBAAoBC,SAAUrB,EAASsB,aAAW,EAAChD,MAAO,CAACiD,SAAU,UACzF,kBAAC,EAAD,CAAOnD,MAAOuB,M,SCTb6B,EAAYC,aAJT,SAAClB,GACb,OAAOA,EAAMD,cAAcX,QAGkB,SAACA,GAC9C,OAAOA,KCaI+B,eAbS,SAACnB,GAAD,MAAY,CAChCZ,KAAM6B,EAAUjB,MAYoB,CAACP,QJDpB,SAACL,GAAD,8CAAU,WAAOgC,GAAP,eAAA1B,EAAA,6DAC3BJ,QAAQC,IAAIH,GADe,SAGNI,EAAMC,UAHA,QAGvBN,EAHuB,SAKvBiC,EAAStB,EAAQX,EAASC,OALH,2CAAV,wDICN+B,EATK,SAAC,GAAqB,IAApB/B,EAAmB,EAAnBA,KAAMK,EAAa,EAAbA,QAMxB,OALA4B,qBAAU,cAIR,CAACjC,EAAMK,IACF,kBAAC,EAAD,CAAeL,KAAMA,EAAMK,QAASA,OCiBhC6B,MA3Bf,WAAgB,IAAD,EACuBC,IAAMC,WAD7B,mBACNC,EADM,KACMC,EADN,OAEsCC,6BAA3CC,EAFK,EAELA,SAAwBC,GAFnB,EAEKC,aAFL,EAEmBD,QAAQE,EAF3B,EAE2BA,OAQxC,MAAe,YAAXF,EACK,KAIP,kBAAC,IAAD,KACE,4BAAQ/D,UAAU,UAAlB,aAEE,kBAAC,IAAD,CAAQkE,QAASP,EAAYQ,SAdf,SAACC,GACnBR,EAAcQ,GACdN,EAAS,CAAEO,MAAOD,EAAYH,EAAOK,KAAOL,EAAOM,SAYKtE,MAAO,CAACuE,WAAY,SAGxE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,CAAC,KAAMC,OAAW,kBAAM,kBAAC,EAAD,WClB7CV,EAAS,CACbK,KAAK,GAAD,OAAKM,eAAL,mBACJL,MAAM,GAAD,OAAKK,eAAL,qBAGPC,IAASF,OACP,kBAAC,IAAMG,WAAP,KACE,kBAAC,wBAAD,CACEC,SAAUd,EACVe,aAAa,QACbC,eAAe,0BAEf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU3C,MAAOA,GACf,kBAAC,EAAD,UAKR4C,SAASC,eAAe,U,mBC5B1B/F,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,qBAAqB,iBAAmB,gCAAgC,kBAAoB,oC","file":"static/js/main.e22cc3e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"rootComponent_wrapper__RDRPZ\",\"buttonWrapper\":\"rootComponent_buttonWrapper__3wnQi\",\"content\":\"rootComponent_content__HMurY\"};","import { notification } from \"antd\"\n\nconst Notification = ({ text = '', type = \"info\", title = '', duration = 3 }) =>\n    notification[type]({\n        message: title,\n        description: text,\n        duration: duration,\n})\n\nexport default Notification","import { Empty, Comment, Avatar, Tooltip } from 'antd'\nimport React from 'react'\nimport style from './items.module.css'\nimport moment from 'moment'\n\n\nconst Items = ({items}) => {\n    return (\n    <div className={style.wrapper}>{\n        ! items\n        ?   <Empty description=\"\" style={{marginTop: '20vh'}}/>\n        :   <div className={style.tweetsWrapper}>{ items.map((item ) => <Comment\n                key={item.id}\n                className={style.tweet}\n                author={<a>{item.title}</a>}\n                avatar={\n                    <Avatar\n                    src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n                    alt={item.title}\n                    />\n                }\n                content={\n                    <p>{item.title}</p>\n                }\n                datetime={\n                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().fromNow()}</span>\n                    </Tooltip>\n                }\n            />)}</div>\n        }</div>\n    )\n}\n\nexport default Items","import { Notification } from \"../components\"\n\nconst errorHandler = (err) => {\n    if(err.response){\n    Notification({\n        text: err.response.data.error,\n        type: 'error',\n        title: \"Access denied or internal service error was received\"\n      })\n    } else if (err){\n        console.log(err)\n        Notification({\n            text: 'server not found',\n            type: 'error',\n            title: \"Network error\"\n        })\n    } else {\n        Notification({\n            text: 'Something went wrong',\n            type: 'error',\n            title: \"Oops...\"\n        })\n    }\n    return null\n}\n\nexport default errorHandler","import axios from 'axios'\nimport errorHandler from '../utils/errorHandler'\n\nconst myApi = {\n    getData: async () => {\n        try {\n            return await axios.get('https://jsonplaceholder.typicode.com/todos?_limit=21')\n        } catch (err) {\n          errorHandler(err)\n        }\n    }\n}\n\nexport default myApi","import myApi from '../../API/myAPI'\nconst initialState = {\n    data: null\n}\n\nexport let simpleReducer = (state = initialState, action) => {\n    switch(action.type){\n        case 'SET_DATA': {\n            return {\n                ...state, data: action.data\n            }\n        }\n        default: \n            return state\n    }\n} \n\nconst setData = (data) => ({type: 'SET_DATA', data})\n\nexport let getData = (data) => async (dispatch) => {\n    console.log(data)\n    debugger\n    let response = await myApi.getData()\n    if (response) {\n        dispatch(setData(response.data))\n    }\n}\n\nexport default simpleReducer"," \nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { simpleReducer } from './reducers'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\n\nlet rootReducer = combineReducers({\n  simpleReducer\n})\n\nconst store = createStore(rootReducer, composeWithDevTools(\n    applyMiddleware(thunkMiddleware)\n  ))\n\nexport default store","import React from 'react'\nimport { Row, Input } from 'antd'\nimport styles from './rootComponent.module.css'\nimport { Items } from '../../../components'\n\nconst { Search } = Input;\n\nconst RootComponent = ({data, getData}) =>{\n    return (\n        <Row className={styles.wrapper}>\n            <h1>Twitter champions ü¶∏üèª‚Äç‚ôÇÔ∏è</h1>\n            <span>Find the best people to follow on any topic. Based on value, not followers.</span>\n            <br/>\n            <br/>\n            <Search placeholder=\"input search text\" onSearch={getData} enterButton style={{maxWidth: '30vw'}}/>\n            <Items items={data}/>\n        </Row>    \n    )\n}\n\nexport default RootComponent","import { createSelector } from 'reselect'\n\nconst getData = (state) => {\n    return state.simpleReducer.data\n}\n\nexport const fetchData = createSelector(getData, (data) => {\n    return data\n})","import React from 'react'\nimport RootComponent from '../component/rootComponent.jsx'\nimport { connect } from 'react-redux'\nimport { getData } from '../../../redux/reducers/simpleReducer'\nimport { fetchData } from '../../../redux/selectors'\nimport { useEffect, useState } from 'react'\n\nconst mapStateToProps = (state) => ({\n    data: fetchData(state)\n})\n\nlet RootContainer = ({data, getData}) => {\n    useEffect(() => {\n        if (!data) {\n            // getData()\n        }\n    },[data, getData])\n    return <RootComponent data={data} getData={getData}/>\n}\n\nexport default connect(mapStateToProps, {getData})(RootContainer)","import React from \"react\";\nimport \"./App.css\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { Switch, Input, Layout } from \"antd\";\nimport { Route } from 'react-router-dom' \nimport { RootComponent } from './pages/index'\n\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = React.useState();\n  const { switcher, currentTheme, status, themes } = useThemeSwitcher();\n\n  const toggleTheme = (isChecked) => {\n    setIsDarkMode(isChecked);\n    switcher({ theme: isChecked ? themes.dark : themes.light });\n  };\n\n  // Avoid theme change flicker\n  if (status === \"loading\") {\n    return null;\n  }\n\n  return (\n    <Layout>\n      <header className=\"header\">\n        Night mode\n        <Switch checked={isDarkMode} onChange={toggleTheme} style={{marginLeft: '1%'}}/>\n      </header>\n      \n        <Route exact path={[\"/\"]} render = { () => <RootComponent/>}/>\n      \n    </Layout>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeSwitcherProvider\n      themeMap={themes}\n      defaultTheme=\"light\"\n      insertionPoint=\"styles-insertion-point\"\n    >\n      <BrowserRouter>\n        <Provider store={store}>\n          <App/>\n        </Provider>    \n      </BrowserRouter>\n    </ThemeSwitcherProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"items_wrapper__1EUSa\",\"tweet\":\"items_tweet__2d3QU\",\"theme_color_pink\":\"items_theme_color_pink__2qNZA\",\"theme_color_green\":\"items_theme_color_green__3qFS0\"};"],"sourceRoot":""}